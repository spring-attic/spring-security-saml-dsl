description = "Spring Security SAML DSL Library"

dependencies {

    compile(
        "org.springframework.security:spring-security-web:$springSecurityVersion",
        "org.springframework.security:spring-security-config:$springSecurityVersion",
        'org.springframework.security.extensions:spring-security-saml2-core:1.0.4.RELEASE',
    )

    provided(
        "javax.servlet:javax.servlet-api:3.1.0",
    )

    testCompile(
		"org.springframework.boot:spring-boot-starter-test:$springBootVersion",
		"org.springframework.security:spring-security-test:$springSecurityVersion",
		'org.assertj:assertj-core:3.3.0',
		'org.seleniumhq.selenium:selenium-java:3.11.0',
		"org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion",
		"org.springframework.boot:spring-boot-starter-web:$springBootVersion",
		"org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion",
        "org.jsoup:jsoup:1.11.3", 
        "org.awaitility:awaitility:3.1.1"
	)

    configurations {
        compile.exclude module: 'spring-boot-starter-jetty'
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}

task packageSources(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task generateDocs() {
}

javadoc {
    logging.captureStandardError LogLevel.INFO
    logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives packageSources
    archives javadocJar
}